"use strict";const d=require("./prism-DosQWPA0.cjs"),i='code[class*="language-javascript"]',r='code[class*="language-html"]',p=/^\/\/(\s*)tag:(\s*)(?<name>(\w+[\w\-_]*))/m,a=n=>n.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#39;");function h(n){const o=[],e={inBlock:!1,openCurly:0,closeCurly:0,fnName:"",fnLines:[]};for(const t of n.split(`
`)){if(!e.inBlock){const s=t.trimEnd(),c=p.exec(s);if(c){e.inBlock=!0,e.fnName=c.groups.name;continue}}if(e.inBlock){e.fnLines.push(t);const{openCurly:s,closeCurly:c}=C(t);e.openCurly+=s,e.closeCurly+=c,e.openCurly===e.closeCurly&&(o.push(E(e)),e.inBlock=!1,e.openCurly=0,e.closeCurly=0,e.fnName="",e.fnLines=[])}}return o}function C(n){const o=n.length,e=o-n.replaceAll("{","").length,t=o-n.replaceAll("}","").length;return{openCurly:e,closeCurly:t}}function y(n,o={js:a,html:a}){const{js:e,html:t,elId:s}={...n},c=document.getElementById(s);if(c){if(e.length>0){const l=c.querySelector(i);if(l)l.innerHTML=o.js(e);else throw new Error(`Container id ${s} does not contain ${i} but javascript example is not empty`)}if(t.length>0){const l=c.querySelector(r);if(l)l.innerHTML=o.html(t);else throw new Error(`Container id ${s} does not contain ${r} but HTML example is not empty`)}}else throw new Error(`Container element with id="${s}" not found`)}function E(n){const o=n.fnLines,e=4,t=[],s=[],c=o.slice(1,-1);c.length===0&&(t.push(""),s.push(""));for(const f of c){const u=f.slice(e).trimEnd(),m=L(u);m.isComment?s.push(m.value):t.push(u)}const l=n.fnName;return{js:t.join(`
`),html:s.join(`
`),elId:l}}function L(n){return/^(\/\/(\s+))</m.exec(n)?{isComment:!0,value:n.slice(3)}:{isComment:!1}}window.Prism=d.Prism;document.addEventListener("DOMContentLoaded",async()=>{w(),await I("index.js"),T(),window.Prism&&window.Prism.highlightAll()});function g(n){return`<span style="color:#fe2f33;font-weight:bold">${a(n)}</span>`}function w(){const o=g("Funny texts don't need Comic Sans");document.getElementById("ff-result").innerHTML=o}async function I(n){const e=await(await fetch(n,{method:"GET"})).text(),t=h(e);for(const s of t)y(s)}function T(){const n="fancy-demo",o="duplicate-fancy-demo";function e(t){const c=document.getElementById(n).querySelector(t).innerHTML,l=document.getElementById(o);l.querySelector(t).innerHTML=c}e(i),e(r)}
//# sourceMappingURL=index.cjs.map
