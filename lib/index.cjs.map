{"version":3,"file":"index.cjs","sources":["../../../dist/zmdc.js","../../lib/index.js"],"sourcesContent":["export const JS_EXAMPLE_EL_QUERY = 'code[class*=\"language-javascript\"]';\nexport const HTML_EXAMPLE_EL_QUERY = 'code[class*=\"language-html\"]';\n//export const DEMO_INDICATOR = /^((?<level>(export|return))\\s+)?(async(\\s+))?function(\\*?)(\\s+)demo(?<fnName>\\w+)(\\s)*\\(/m;\nexport const DEMO_BLOCK_INDICATOR = /^\\/\\/(\\s*)tag:(\\s*)(?<name>(\\w+[\\w\\-_]*))/m;\n/**\n * escape HTML specific character.\n * @param text text to insert into HTML\n * @return escaped text\n * */\nexport const htmlEscape = (text) => {\n    return text.replaceAll(\"&\", \"&amp;\")\n        .replaceAll(\"<\", \"&lt;\")\n        .replaceAll(\">\", \"&gt;\")\n        .replaceAll('\"', \"&quot;\")\n        .replaceAll(\"'\", \"&#39;\");\n};\n/**\n * recognize demo functions and parse them to an Array of Example {@see Example}.\n * A function is recognized as an example, if its declaration begins with `export function demo`.\n * For example:\n * ```\n * export function demoFancyImageProcessing(img) {\n *      // tag: demo-1\n *      const metadata = auxiliaryFunction(img);\n *      const fancyImage = doSomeFancyStuff(img, metadata);\n *      // <div id=\"result\">\n *      document.getElementById(\"result\").innerHTML = `<img src=\"${fancyImage}\" alt=\"\">`;\n * }\n * ```\n * @param code example code\n * @return Example[]\n * */\nexport function parseExampleFunctions(code) {\n    const example = [];\n    //let functionLines = [];\n    const state = {\n        inBlock: false,\n        openCurly: 0,\n        closeCurly: 0,\n        fnName: \"\",\n        fnLines: []\n    };\n    for (const line of code.split('\\n')) {\n        if (!state.inBlock) {\n            const trimmedLine = line.trimEnd();\n            const matched = DEMO_BLOCK_INDICATOR.exec(trimmedLine);\n            if (matched) {\n                // recognize a new demo function\n                state.inBlock = true;\n                state.fnName = matched.groups[\"name\"];\n                continue;\n            }\n        }\n        if (state.inBlock) {\n            state.fnLines.push(line);\n            const { openCurly, closeCurly } = countCurly(line);\n            state.openCurly += openCurly;\n            state.closeCurly += closeCurly;\n            if (state.openCurly === state.closeCurly) {\n                example.push(parseCode(state));\n                // reset state\n                state.inBlock = false;\n                state.openCurly = 0;\n                state.closeCurly = 0;\n                state.fnName = \"\";\n                state.fnLines = [];\n            }\n        }\n    }\n    return example;\n}\nfunction countCurly(line) {\n    const length = line.length;\n    const openCurly = length - (line.replaceAll('{', '').length);\n    const closeCurly = length - (line.replaceAll('}', '').length);\n    return { openCurly, closeCurly };\n}\n/**\n * show an Example in a DOM\n * @param example the example, which is the result of {@see #parseCode} by parsing an example function.\n * @param fmt a formatter. The default formatter just escapes HTML specific character.\n *\n * */\nexport function showExampleCode(example, fmt = { js: htmlEscape, html: htmlEscape }) {\n    const { js, html, elId } = { ...example };\n    const el = document.getElementById(elId);\n    if (el) {\n        if (js.length > 0) {\n            const jsContainer = el.querySelector(JS_EXAMPLE_EL_QUERY);\n            if (jsContainer) {\n                jsContainer.innerHTML = fmt.js(js);\n            }\n            else {\n                throw new Error(`Container id ${elId} does not contain ${JS_EXAMPLE_EL_QUERY} but javascript example is not empty`);\n            }\n        }\n        if (html.length > 0) {\n            const htmlContainer = el.querySelector(HTML_EXAMPLE_EL_QUERY);\n            if (htmlContainer) {\n                htmlContainer.innerHTML = fmt.html(html);\n            }\n            else {\n                throw new Error(`Container id ${elId} does not contain ${HTML_EXAMPLE_EL_QUERY} but HTML example is not empty`);\n            }\n        }\n    }\n    else {\n        throw new Error(`Container element with id=\"${elId}\" not found`);\n    }\n}\nexport function parseCode(state) {\n    const functionLines = state.fnLines;\n    const FUNCTION_INDENT_SIZE = 4;\n    const js = [];\n    const html = [];\n    const functionBodyLines = functionLines.slice(1, -1);\n    if (functionBodyLines.length === 0) {\n        js.push('');\n        html.push('');\n    }\n    for (const line of functionBodyLines) {\n        const chars = line.slice(FUNCTION_INDENT_SIZE).trimEnd();\n        const htmlComment = validHTML(chars);\n        if (htmlComment.isComment) {\n            html.push(htmlComment.value);\n        }\n        else {\n            js.push(chars);\n        }\n    }\n    const elId = state.fnName; //parseElId(functionLines[1]);\n    return { js: js.join('\\n'), html: html.join('\\n'), elId };\n}\nfunction validHTML(chars) {\n    const HTML_INDICATOR = /^(\\/\\/(\\s+))</m;\n    const CROPPED_PREFIX = '// '.length;\n    const matches = HTML_INDICATOR.exec(chars);\n    if (matches) {\n        return {\n            isComment: true,\n            value: chars.slice(CROPPED_PREFIX)\n        };\n    }\n    return {\n        isComment: false\n    };\n}\n//# sourceMappingURL=zmdc.js.map","import {JS_EXAMPLE_EL_QUERY, HTML_EXAMPLE_EL_QUERY,\n    htmlEscape, parseExampleFunctions, showExampleCode} from '../../dist/zmdc.js';\n\nimport './index.css';\n\n\nimport Prism from 'prismjs';\n\nwindow.Prism = Prism;\n\n// tag: howto-show-demo-code\n//{\n    document.addEventListener(\"DOMContentLoaded\", async () => {\n        demoUsageTextFormatFunction();\n        await showDemoCode('index.js');\n        verifyContentOfFanyDemo();\n    });\n//}\n\nfunction formatFancy(text) {\n    const escaped = htmlEscape(text);\n    return `<span style=\"color:#fe2f33;font-weight:bold\">${escaped}</span>`;\n}\n\n\n// tag: fancy-demo\nfunction demoUsageTextFormatFunction() {\n    const text = \"Funny texts don't need Comic Sans\";\n    const fancy = formatFancy(text);\n    // <span id=\"ff-result\"></span>\n    document.getElementById(\"ff-result\").innerHTML = fancy;\n}\n\n// tag: howto-prepare-demo-function\nfunction howToPrepareDemoFunction () {\n    function demoUsageTextFormatFunction() {\n        const text = \"Funny texts don't need Comic Sans\";\n        const fancy = formatFancy(text);\n        // <span id=\"ff-result\"></span>\n        document.getElementById(\"ff-result\").innerHTML = fancy;\n    }\n    // <span id=\"ff-result\"></span>\n}\n\n// tag: howto-run-demo-function\nfunction howtoRunDemoFunction() {\n    demoUsageTextFormatFunction();\n}\n\n// tag: howto-mark-demo-info\nfunction howtoMarkDemoInfo() {\n    // tag: fancy-demo\n    function demoUsageTextFormatFunction() {\n        const text = \"Funny texts don't need Comic Sans\";\n        const fancy = formatFancy(text);\n        document.getElementById(\"ff-result\").innerHTML = fancy;\n        // <span id=\"ff-result\">\n    }\n    // <div id=\"fancy-demo\">\n    //     <pre><code class=\"example-javascript\"></code><pre>\n    //     <pre><code class=\"example-html\"></code></pre>\n    // </div>\n}\n\n\n/**\n * this function can also load any other demo script.\n * */\n// tag: howto-load-demo-code\n//{\n    async function showDemoCode(demoScript) {\n        const response = await fetch(demoScript, {method: 'GET'});\n        const text = await response.text();\n        const demoExamples = parseExampleFunctions(text);\n        for (const example of demoExamples) {\n            showExampleCode(example);\n        }\n    }\n//}\n\n// tag: verify-contents-of-fancy-demo\nfunction verifyContentOfFanyDemo() {\n    const id = \"fancy-demo\";\n    const verifyId = \"duplicate-fancy-demo\";\n\n    function showCode(bySelector) {\n        const div = document.getElementById(id);\n        const code = div.querySelector(bySelector).innerHTML;\n        const verify = document.getElementById(verifyId);\n        verify.querySelector(bySelector).innerText = code;\n    }\n\n    // <div id=\"duplicate-fancy-demo\">\n    //    <pre><code class=\"example-javascript language-javascript\"></code></pre>\n    //    <pre><code class=\"example-html language-html\"></code></pre>\n    // </div>\n    showCode(JS_EXAMPLE_EL_QUERY);\n    showCode(HTML_EXAMPLE_EL_QUERY);\n}\n"],"names":["JS_EXAMPLE_EL_QUERY","HTML_EXAMPLE_EL_QUERY","DEMO_BLOCK_INDICATOR","htmlEscape","text","parseExampleFunctions","code","example","state","line","trimmedLine","matched","openCurly","closeCurly","countCurly","parseCode","length","showExampleCode","fmt","js","html","elId","el","jsContainer","htmlContainer","functionLines","FUNCTION_INDENT_SIZE","functionBodyLines","chars","htmlComment","validHTML","Prism","demoUsageTextFormatFunction","showDemoCode","verifyContentOfFanyDemo","formatFancy","fancy","demoScript","demoExamples","id","verifyId","showCode","bySelector","verify"],"mappings":"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"}